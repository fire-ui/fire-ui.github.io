{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Fire-UI - Organisation\\\\fire-ui.github.io\\\\src\\\\pages\\\\docs\\\\[slug].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport Layout from 'src/components/Layout';\nimport { doStuff } from \"src/utils/FireUIJS\";\nvar lastRender = \"\";\n\nvar Docs = function Docs(_ref) {\n  _s();\n\n  var content = _ref.content,\n      data = _ref.data,\n      slugs = _ref.slugs,\n      allData = _ref.allData;\n\n  var _useState = useState(''),\n      path = _useState[0],\n      setPath = _useState[1];\n\n  useEffect(function () {\n    lastRender = window.location.href;\n  }, []);\n  useEffect(function () {\n    if (lastRender !== window.location.href) {\n      doStuff();\n      lastRender = window.location.href;\n    }\n  });\n  useEffect(function () {\n    setPath(window.location.pathname);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    slugs: slugs,\n    allData: allData,\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(data.title, \" ~ Fire UI\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"title\",\n        content: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:title\",\n        content: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"twitter:title\",\n        content: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"og:description\",\n        content: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        property: \"twitter:description\",\n        content: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), !data.keywords || data.keywords.length === 0 ? null : /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"keywords\",\n        content: data.keywords.join(',')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 72\n      }, _this), path === \"/docs/slideshow\" ? /*#__PURE__*/_jsxDEV(\"script\", {\n        type: \"text/javascript\",\n        dangerouslySetInnerHTML: {\n          __html: \"var defaultIndex = 1;\\n                    activeSlide(defaultIndex);\\n                \\n                    function btnSlide(n) { activeSlide(defaultIndex += n); }\\n                    function currentSlide(n) { activeSlide(defaultIndex = n); }\\n                    function activeSlide(n) {\\n                        var i;\\n                        var slides = document.getElementsByClassName(\\\"slideshow\\\");\\n                        var info = document.getElementsByClassName(\\\"slideshow-dot\\\");\\n                        if (n > slides.length) {defaultIndex = 1}\\n                        if (n < 1) {defaultIndex = slides.length}\\n                        for (i = 0; i < slides.length; i++) {\\n                            slides[i].classList.add(\\\"slideshow-none\\\");\\n                        }\\n                        for (i = 0; i < info.length; i++) {\\n                            info[i].className = info[i].className.replace(\\\" slideshow-active\\\", \\\"\\\");\\n                        }\\n                        if(slides[defaultIndex - 1]) slides[defaultIndex-1].classList.toggle(\\\"slideshow-none\\\");\\n                        if(info[defaultIndex - 1]) info[defaultIndex-1].className += \\\" slideshow-active\\\";\\n                }\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Docs, \"pu2mTNKrHSebDutBRHz+dwP8mS0=\");\n\n_c = Docs;\nexport var __N_SSG = true;\nexport default Docs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Docs\");","map":{"version":3,"sources":["E:/Fire-UI - Organisation/fire-ui.github.io/src/pages/docs/[slug].tsx"],"names":["React","useEffect","useState","Head","Layout","doStuff","lastRender","Docs","content","data","slugs","allData","path","setPath","window","location","href","pathname","title","description","keywords","length","join","__html"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nimport { GetStaticPaths, GetStaticProps } from 'next';\r\nimport matter from 'gray-matter';\r\nimport marked from 'marked';\r\nimport Head from 'next/head';\r\nimport { Metadata } from '../../types';\r\nimport Layout from 'src/components/Layout';\r\nimport { readFilesMetadata } from 'src/utils/readFiles';\r\nimport { doStuff } from \"src/utils/FireUIJS\";\r\n\r\ninterface Props {\r\n    allData: Metadata[];\r\n    slugs: string[];\r\n    content: string;\r\n    data: Metadata;\r\n}\r\nlet lastRender: String = \"\";\r\nconst Docs: React.FC<Props> = ({ content, data, slugs, allData }) => {\r\n    const [path, setPath] = useState('')\r\n\r\n    useEffect(() => {\r\n        lastRender = window.location.href\r\n    }, [])\r\n    useEffect(() => {\r\n        if(lastRender !== window.location.href){\r\n            doStuff()\r\n            lastRender = window.location.href\r\n        }\r\n    })\r\n    useEffect(() => {\r\n        setPath(window.location.pathname)\r\n    })\r\n    return (\r\n        <Layout slugs={slugs} allData={allData}>\r\n            <Head>\r\n                <title>{`${data.title} ~ Fire UI`}</title>\r\n                <meta name=\"title\" content = {data.title} />\r\n                <meta property=\"og:title\" content = {data.title} />\r\n                <meta property=\"twitter:title\" content = {data.title} />\r\n                <meta name=\"description\" content={data.description} />\r\n                <meta property=\"og:description\" content = {data.description} />\r\n                <meta property=\"twitter:description\" content = {data.description} />\r\n                {!data.keywords || data.keywords.length === 0 ? null : <meta name=\"keywords\" content={data.keywords.join(',')} />}\r\n                {path === \"/docs/slideshow\"?\r\n                <script type = \"text/javascript\" dangerouslySetInnerHTML = {({__html: \r\n                `var defaultIndex = 1;\r\n                    activeSlide(defaultIndex);\r\n                \r\n                    function btnSlide(n) { activeSlide(defaultIndex += n); }\r\n                    function currentSlide(n) { activeSlide(defaultIndex = n); }\r\n                    function activeSlide(n) {\r\n                        var i;\r\n                        var slides = document.getElementsByClassName(\"slideshow\");\r\n                        var info = document.getElementsByClassName(\"slideshow-dot\");\r\n                        if (n > slides.length) {defaultIndex = 1}\r\n                        if (n < 1) {defaultIndex = slides.length}\r\n                        for (i = 0; i < slides.length; i++) {\r\n                            slides[i].classList.add(\"slideshow-none\");\r\n                        }\r\n                        for (i = 0; i < info.length; i++) {\r\n                            info[i].className = info[i].className.replace(\" slideshow-active\", \"\");\r\n                        }\r\n                        if(slides[defaultIndex - 1]) slides[defaultIndex-1].classList.toggle(\"slideshow-none\");\r\n                        if(info[defaultIndex - 1]) info[defaultIndex-1].className += \" slideshow-active\";\r\n                }`\r\n                })}>\r\n                </script>\r\n                :null}\r\n            </Head>\r\n            <div className=\"pb-2\">\r\n                <div dangerouslySetInnerHTML={{ __html: content }} />\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async ({ params: { slug } }: any) => {\r\n    const rawContents = fs.readFileSync(path.join(\"src\", \"posts\", slug + \".md\")).toString();\r\n    const { data, content } = matter(rawContents);\r\n    const files = fs.readdirSync(path.join(\"src\", \"posts\"));\r\n    const allData = readFilesMetadata(path.join(\"src\", \"posts\"));\r\n    const slugs = files.map(file => file.replace('.md', ''));\r\n\r\n    // console.log(\"allData: \", allData)\r\n    // console.log(\"slugs: \", slugs)\r\n\r\n    const parsedContent = marked(content);\r\n\r\n    //console.log(data);\r\n    return {\r\n        props: {\r\n            allData,\r\n            slugs,\r\n            data,\r\n            content: parsedContent\r\n        }, // will be passed to the page component as props\r\n    }\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n\r\n    const files = fs.readdirSync(path.join('src', 'posts'));\r\n    const paths = files.map(file => ({\r\n        params: { slug: file.replace('.md', '') }\r\n    }));\r\n\r\n    //console.log(files);\r\n\r\n    return {\r\n        paths,\r\n        fallback: false // See the \"fallback\" section below\r\n    };\r\n}\r\n\r\nexport default Docs\r\n"]},"metadata":{},"sourceType":"module"}